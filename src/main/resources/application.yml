server:
  servlet:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  port: 8091

logging:
  level:
    root: INFO

spring:
  jmx:
    enabled: false
  profiles:
    active: dev
  application:
    name: door-applets-bg-high-version
  mvc:
    async:
      request-timeout: 120000  # 异步请求超时时间(毫秒)
  ai: # spring-ai-alibaba
    dashscope:
      api-key: ${ai.dashscope-deepseek.api-key}
      read-timeout: 60000     # 读取超时时间(毫秒)
    openai:
      api-key: ${ai.openai-deepseek.api-key}
      base-url: ${ai.openai-deepseek.url}
      chat:
          embedding:
            enabled: false
  datasource: # MySQL 数据库 （上下文记忆功能）
    url: ${memory.mysql.url}
    username: ${memory.mysql.username}
    password: ${memory.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: ${memory.mysql.url}
      username: ${memory.mysql.username}
      password: ${memory.mysql.password}
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接等待超时时间
      max-wait: 60000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      # 配置连接在池中的最大生存时间
      max-evictable-idle-time-millis: 900000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 连接属性
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;socketTimeout=60000;connectTimeout=30000
      # 超时时间配置
      remove-abandoned: true
      remove-abandoned-timeout: 1800
      # 连接失败重试次数
      connection-error-retry-attempts: 3
      # 断开后是否自动重连
      break-after-acquire-failure: false
      # 检查空闲连接的频率
      keep-alive: true
  data:
    redis: # Redis 数据库 （上下文记忆功能）
      host: ${memory.redis.host}
      port: ${memory.redis.port}
      password: ${memory.redis.password}
      database: ${memory.redis.database}
      timeout: 5000   # 连接超时时间（毫秒）
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.swimmingliu.controller

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

# OSS 文件上传
oss:
  qiniuyun:
    access-key: ${qiniuyun.access-key}
    secret-key: ${qiniuyun.secret-key}
    bucket: ${qiniuyun.bucket}
    prefix-url: ${qiniuyun.prefix-url}

# OCR 识别
ocr:
  ali-cloud:
    access-key: ${aliyun.access-key}
    secret-key: ${aliyun.secret-key}
    endpoint: ${aliyun.endpoint}
  llama-cloud:
    access-key: ${llama.access-key}

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.swimmingliu.model.entity
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: true
  global-config:
    # 全局配置
    db-config:
      # 数据库配置
      id-type: auto
      table-prefix: t_
    workerId: 1  # 工作机器ID配置
    datacenterId: 1  # 数据中心ID配置
